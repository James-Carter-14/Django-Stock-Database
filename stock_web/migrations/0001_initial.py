# Generated by Django 2.2.7 on 2019-11-11 12:50

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Internal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=4, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_no', models.CharField(max_length=20, verbose_name='Lot Number')),
                ('po', models.CharField(max_length=20, verbose_name='Purchase Order')),
                ('date_rec', models.DateField(default=datetime.date.today, verbose_name='Date Received')),
                ('cond_rec', models.CharField(choices=[('GD', 'Good'), ('NA', 'N/A, Made in House'), ('DU', 'Damaged - Usable'), ('UN', 'Damaged - Not Usable')], default='GD', max_length=2, verbose_name='Condition Received')),
                ('date_exp', models.DateField(verbose_name='Expiry Date')),
                ('date_op', models.DateField(blank=True, null=True)),
                ('is_op', models.BooleanField(default=False)),
                ('date_fin', models.DateField(blank=True, null=True, verbose_name='Date Finished')),
                ('finished', models.BooleanField(default=False)),
                ('fin_text', models.CharField(blank=True, max_length=50, null=True, verbose_name='Finished Reason')),
                ('fin_user', models.ForeignKey(blank=True, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='3+', to=settings.AUTH_USER_MODEL)),
                ('internal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock_web.Internal')),
                ('op_user', models.ForeignKey(blank=True, limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='2+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reagents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('cat_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Catalogue Number')),
                ('count_no', models.PositiveIntegerField(default=0)),
                ('min_count', models.PositiveIntegerField(verbose_name='Minimum Stock Level')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('shelf_life', models.PositiveIntegerField(verbose_name='Shelf Life (Months)')),
                ('is_active', models.BooleanField(default=True)),
                ('comp1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component1', to='stock_web.Reagents', verbose_name='component 1')),
                ('comp10', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component10', to='stock_web.Reagents', verbose_name='component 10')),
                ('comp2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component2', to='stock_web.Reagents', verbose_name='component 2')),
                ('comp3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component3', to='stock_web.Reagents', verbose_name='component 3')),
                ('comp4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component4', to='stock_web.Reagents', verbose_name='component 4')),
                ('comp5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component5', to='stock_web.Reagents', verbose_name='component 5')),
                ('comp6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component6', to='stock_web.Reagents', verbose_name='component 6')),
                ('comp7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component7', to='stock_web.Reagents', verbose_name='component 7')),
                ('comp8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component8', to='stock_web.Reagents', verbose_name='component 8')),
                ('comp9', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='component9', to='stock_web.Reagents', verbose_name='component 9')),
                ('reagent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Reagent_ID', to='stock_web.Reagents', verbose_name='Reagent ID')),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Validation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('val_date', models.DateField(blank=True, null=True)),
                ('val_run', models.CharField(max_length=25)),
                ('val_user', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Solutions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(default=datetime.date.today)),
                ('comp1', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp1', to='stock_web.Inventory')),
                ('comp10', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp10', to='stock_web.Inventory')),
                ('comp2', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp2', to='stock_web.Inventory')),
                ('comp3', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp3', to='stock_web.Inventory')),
                ('comp4', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp4', to='stock_web.Inventory')),
                ('comp5', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp5', to='stock_web.Inventory')),
                ('comp6', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp6', to='stock_web.Inventory')),
                ('comp7', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp7', to='stock_web.Inventory')),
                ('comp8', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp8', to='stock_web.Inventory')),
                ('comp9', models.ForeignKey(blank=True, limit_choices_to={'finished': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='comp9', to='stock_web.Inventory')),
                ('creator_user', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.PROTECT, to='stock_web.Recipe')),
            ],
        ),
        migrations.AddField(
            model_name='reagents',
            name='recipe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='stock_web.Recipe'),
        ),
        migrations.AddField(
            model_name='reagents',
            name='storage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='stock_web.Storage'),
        ),
        migrations.AddField(
            model_name='reagents',
            name='supplier_def',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock_web.Suppliers', verbose_name='Default Supplier'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='reagent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock_web.Reagents'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='rec_user',
            field=models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.PROTECT, related_name='1+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inventory',
            name='sol',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='stock_web.Solutions'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='stock_web.Suppliers'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='val',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='stock_web.Validation'),
        ),
        migrations.CreateModel(
            name='ForceReset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('force_password_change', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
